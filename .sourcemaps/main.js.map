{"version":3,"sources":["../../src/ionic-image-loader/src/index.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/ionic-image-loader/src/components/img-loader.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/ionic-image-loader/src/image-loader.module.ts","../../src/app/app.component.ts","../../src/ionic-image-loader/src/providers/image-loader-config.ts","../../src/ionic-image-loader/src/providers/image-loader.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export * from './image-loader.module';\nexport * from './components/img-loader';\nexport * from './providers/image-loader-config';\nexport * from './providers/image-loader';\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/index.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 110\n// module chunks = 6","var map = {\n\t\"../pages/avatars/avatars.module\": [\n\t\t272,\n\t\t4\n\t],\n\t\"../pages/cards/cards.module\": [\n\t\t273,\n\t\t3\n\t],\n\t\"../pages/concurrency/concurrency.module\": [\n\t\t274,\n\t\t2\n\t],\n\t\"../pages/home/home.module\": [\n\t\t275,\n\t\t5\n\t],\n\t\"../pages/slider/slider.module\": [\n\t\t276,\n\t\t1\n\t],\n\t\"../pages/virtual-scroll/virtual-scroll.module\": [\n\t\t277,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 151;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 6","import { Component, Input, Output, ElementRef, Renderer, OnInit, EventEmitter } from '@angular/core';\nimport { ImageLoader } from '../providers/image-loader';\nimport { ImageLoaderConfig } from '../providers/image-loader-config';\n\n@Component({\n  selector: 'img-loader',\n  template: '<ion-spinner *ngIf=\"spinner && isLoading && !fallbackAsPlaceholder\" [name]=\"spinnerName\" [color]=\"spinnerColor\"></ion-spinner>',\n  styles: ['ion-spinner { float: none; margin-left: auto; margin-right: auto; display: block; }']\n})\nexport class ImgLoader implements OnInit {\n\n  /**\n   * The URL of the image to load.\n   */\n  @Input()\n  set src(imageUrl: string) {\n    this._src = this.processImageUrl(imageUrl);\n    this.updateImage(this._src);\n  };\n\n  get src(): string {\n    return this._src;\n  }\n\n  private _src: string;\n\n  /**\n   * Fallback URL to load when the image url fails to load or does not exist.\n   */\n  @Input('fallback') fallbackUrl: string = this._config.fallbackUrl;\n\n  /**\n   * Whether to show a spinner while the image loads\n   */\n  @Input() spinner: boolean = this._config.spinnerEnabled;\n\n  /**\n   * Whether to show the fallback image instead of a spinner while the image loads\n   */\n  @Input() fallbackAsPlaceholder: boolean = this._config.fallbackAsPlaceholder;\n\n  /**\n   * Use <img> tag\n   */\n  @Input()\n  set useImg(val: boolean) {\n    this._useImg = val !== false;\n  }\n\n  private _useImg: boolean = this._config.useImg;\n\n  /**\n   * Convenience attribute to disable caching\n   * @param val\n   */\n  @Input()\n  set noCache(val: boolean) {\n    this.cache = val !== false;\n  }\n\n  /**\n   * Enable/Disable caching\n   * @type {boolean}\n   */\n  @Input() cache: boolean = true;\n\n  /**\n   * Width of the image. This will be ignored if using useImg.\n   */\n  @Input() width: string = this._config.width;\n\n  /**\n   * Height of the image. This will be ignored if using useImg.\n   */\n  @Input() height: string = this._config.height;\n\n  /**\n   * Display type of the image. This will be ignored if using useImg.\n   */\n  @Input() display: string = this._config.display;\n\n  /**\n   * Background size. This will be ignored if using useImg.\n   */\n  @Input() backgroundSize: string = this._config.backgroundSize;\n\n  /**\n   * Background repeat. This will be ignored if using useImg.\n   */\n  @Input() backgroundRepeat: string = this._config.backgroundRepeat;\n\n  /**\n   * Name of the spinner\n   */\n  @Input() spinnerName: string = this._config.spinnerName;\n\n  /**\n   * Color of the spinner\n   */\n  @Input() spinnerColor: string = this._config.spinnerColor;\n\n  /**\n   * Notify on image load..\n   */\n  @Output()\n  load: EventEmitter<ImgLoader> = new EventEmitter<ImgLoader>();\n\n  /**\n   * Indicates if the image is still loading\n   * @type {boolean}\n   */\n  isLoading: boolean = true;\n\n  element: HTMLElement;\n\n  constructor(\n    private _element: ElementRef,\n    private _renderer: Renderer,\n    private _imageLoader: ImageLoader,\n    private _config: ImageLoaderConfig\n  ) {}\n\n  ngOnInit(): void {\n    if (this.fallbackAsPlaceholder && this.fallbackUrl) {\n      this.setImage(this.fallbackUrl, false);\n    }\n\n    if (!this.src) {\n      // image url was not passed\n      // this can happen when [src] is set to a variable that turned out to be undefined\n      // one example could be a list of users with their profile pictures\n      // in this case, it would be useful to use the fallback image instead\n      // if fallbackUrl was used as placeholder we do not need to set it again\n      if (!this.fallbackAsPlaceholder && this.fallbackUrl) {\n        // we're not going to cache the fallback image since it should be locally saved\n        this.setImage(this.fallbackUrl);\n      } else {\n        this.isLoading = false;\n      }\n    }\n  }\n\n  private updateImage(imageUrl: string) {\n    this._imageLoader.getImagePath(imageUrl)\n      .then((imageUrl: string) => this.setImage(imageUrl))\n      .catch((error: any) => this.setImage(this.fallbackUrl || imageUrl));\n  }\n\n  /**\n   * Gets the image URL to be loaded and disables caching if necessary\n   * @returns {string}\n   */\n  private processImageUrl(imageUrl: string): string {\n    if (this.cache === false) {\n      // need to disable caching\n\n      if (imageUrl.indexOf('?') === -1) { // add ? if doesn't exists\n        imageUrl += '?';\n      }\n\n      if (['&', '?'].indexOf(imageUrl.charAt(imageUrl.length)) === -1) { // add & if necessary\n        imageUrl += '&';\n      }\n\n      // append timestamp at the end to make URL unique\n      imageUrl += 'cache_buster=' + Date.now();\n    }\n\n    return imageUrl;\n  }\n\n  /**\n   * Set the image to be displayed\n   * @param imageUrl {string} image src\n   * @param stopLoading {boolean} set to true to mark the image as loaded\n   */\n  private setImage(imageUrl: string, stopLoading: boolean = true): void {\n    this.isLoading = !stopLoading;\n\n    if (this._useImg) {\n      \n      // Using <img> tag\n      if (!this.element) {\n        // create img element if we dont have one\n        this.element = this._renderer.createElement(this._element.nativeElement, 'img');\n      }\n\n      // set it's src\n      this._renderer.setElementAttribute(this.element, 'src', imageUrl);\n\n\n      if (this.fallbackUrl && !this._imageLoader.nativeAvailable) {\n        this._renderer.setElementAttribute(this.element, 'onerror', `this.src=\"${ this.fallbackUrl }\"`);\n      }\n\n    } else {\n\n      // Not using <img> tag\n\n      this.element = this._element.nativeElement;\n\n      if (this.display) {\n        this._renderer.setElementStyle(this.element, 'display', this.display);\n      }\n\n      if (this.height) {\n        this._renderer.setElementStyle(this.element, 'height', this.height);\n      }\n\n      if (this.width) {\n        this._renderer.setElementStyle(this.element, 'width', this.width);\n      }\n\n      if (this.backgroundSize) {\n        this._renderer.setElementStyle(this.element, 'background-size', this.backgroundSize);\n      }\n\n      if (this.backgroundRepeat) {\n        this._renderer.setElementStyle(this.element, 'background-repeat', this.backgroundRepeat);\n      }\n\n      this._renderer.setElementStyle(this.element, 'background-image', 'url(\\'' + ( imageUrl || this.fallbackUrl ) + '\\')');\n    }\n\n    this.load.emit(this);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/components/img-loader.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule } from '@angular/core';\nimport { IonicApp, IonicModule } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { IonicImageLoader } from '../ionic-image-loader/src/';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [\n    MyApp,\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/avatars/avatars.module#Module', name: 'avatars-page', segment: 'avatars', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/cards/cards.module#Module', name: 'cards-page', segment: 'cards', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/concurrency/concurrency.module#Module', name: 'concurrency-page', segment: 'concurrency', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/home/home.module#Module', name: 'home-page', segment: 'home', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/slider/slider.module#Module', name: 'slider-page', segment: 'slider', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/virtual-scroll/virtual-scroll.module#Module', name: 'virtual-scroll-page', segment: 'virtual-scroll', priority: 'low', defaultHistory: [] }\n  ]\n}),\n    IonicImageLoader.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n  ],\n  providers: [\n    SplashScreen,\n    StatusBar\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ImgLoader } from './components/img-loader';\nimport { ImageLoader } from './providers/image-loader';\nimport { ImageLoaderConfig } from './providers/image-loader-config';\nimport { IonicModule } from 'ionic-angular';\nimport { File } from '@ionic-native/file';\nimport { FileTransfer } from '@ionic-native/file-transfer';\n\n@NgModule({\n  declarations: [\n    ImgLoader\n  ],\n  imports: [\n    IonicModule\n  ],\n  exports: [\n    ImgLoader\n  ]\n})\nexport class IonicImageLoader {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: IonicImageLoader,\n      providers: [\n        ImageLoaderConfig,\n        ImageLoader,\n        File,\n        FileTransfer\n      ]\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/image-loader.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { ImageLoaderConfig } from '../ionic-image-loader/src/';\n\n@Component({\n  template: `<ion-nav root=\"home-page\"></ion-nav>`\n})\nexport class MyApp {\n\n  constructor(\n    platform: Platform,\n    imageLoaderConfig: ImageLoaderConfig,\n    statusBar: StatusBar\n  ) {\n\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n    });\n\n\n    // enable debug mode to get console logs and stuff\n    imageLoaderConfig.enableDebugMode();\n    // set a fallback url to use by default in case an image is not found\n    imageLoaderConfig.setFallbackUrl('assets/fallback.png');\n\n    imageLoaderConfig.setImageReturnType('base64');\n\n    imageLoaderConfig.setSpinnerColor('secondary');\n    imageLoaderConfig.setSpinnerName('bubbles');\n\n\n    imageLoaderConfig.maxCacheSize = 2 * 1024 * 1024; // 2 MB\n    imageLoaderConfig.maxCacheAge = 60 * 1000; // 1 minute\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ImageLoaderConfig {\n\n  debugMode: boolean = false;\n\n  spinnerEnabled: boolean = true;\n\n  fallbackAsPlaceholder: boolean = false;\n\n  backgroundSize: string = 'contain';\n\n  backgroundRepeat: string = 'no-repeat';\n\n  display: string = 'block';\n\n  width: string = '100%';\n\n  height: string = '100%';\n\n  useImg: boolean = false;\n\n  fallbackUrl: string;\n\n  concurrency: number = 5;\n\n  maxCacheSize: number = -1;\n\n  maxCacheAge: number = -1;\n\n  imageReturnType: 'base64' | 'uri' = 'uri';\n\n  spinnerName: string;\n\n  spinnerColor: string;\n\n  private _cacheDirectoryName: string = 'image-loader-cache';\n\n  set cacheDirectoryName(name: string) {\n    name.replace(/\\W/g, '');\n    this._cacheDirectoryName = name;\n  }\n\n  get cacheDirectoryName(): string {\n    return this._cacheDirectoryName;\n  }\n\n  /**\n   * Enables debug mode to receive console logs, errors, warnings\n   */\n  enableDebugMode(): void {\n    this.debugMode = true;\n  }\n\n  /**\n   * Enable/Disable the spinner by default. Defaults to true.\n   * @param enable {boolean} set to true to enable\n   */\n  enableSpinner(enable: boolean): void {\n    this.spinnerEnabled = enable;\n  }\n\n  /**\n   * Enable/Disable the fallback image as placeholder instead of the spinner. Defaults to false.\n   * @param enable {boolean} set to true to enable\n   */\n  enableFallbackAsPlaceholder(enable: boolean): void {\n    this.fallbackAsPlaceholder = enable;\n  }\n\n  /**\n   * Sets the cache directory name. Defaults to 'image-loader-cache'\n   * @param name {string} name of directory\n   */\n  setCacheDirectoryName(name: string): void {\n    this.cacheDirectoryName = name;\n  }\n\n  /**\n   * Set default height for images that are not using <img> tag\n   * @param height {string} height\n   */\n  setHeight(height: string): void {\n    this.height = height;\n  }\n\n  /**\n   * Set default width for images that are not using <img> tag\n   * @param width {string} Width\n   */\n  setWidth(width: string): void {\n    this.width = width;\n  }\n\n  /**\n   * Enable display mode for images that are not using <img> tag\n   * @param display {string} Display mode\n   */\n  setDisplay(display: string): void {\n    this.display = display;\n  }\n\n  /**\n   * Use <img> tag by default\n   * @param use {boolean} set to true to use <img> tag by default\n   */\n  useImageTag(use: boolean): void {\n    this.useImg = use;\n  }\n\n  /**\n   * Set default background size for images that are not using <img> tag\n   * @param backgroundSize {string} Background size\n   */\n  setBackgroundSize(backgroundSize: string): void {\n    this.backgroundSize = backgroundSize;\n  }\n\n  /**\n   * Set background repeat for images that are not using <img> tag\n   * @param backgroundRepeat {string} Background repeat\n   */\n  setBackgroundRepeat(backgroundRepeat: string): void {\n    this.backgroundRepeat = backgroundRepeat;\n  }\n\n  /**\n   * Set fallback URL to use when image src is undefined or did not resolve.\n   * This image will not be cached. This should ideally be a locally saved image.\n   * @param fallbackUrl {string} The remote or local URL of the image\n   */\n  setFallbackUrl(fallbackUrl: string): void {\n    this.fallbackUrl = fallbackUrl;\n  }\n\n  /**\n   * Set the maximum number of allowed connections at the same time.\n   * @param concurrency\n   */\n  setConcurrency(concurrency: number): void {\n    this.concurrency = concurrency;\n  }\n\n  /**\n   * Sets the maximum allowed cache size\n   * @param cacheSize {number} Cache size in bytes\n   */\n  setMaximumCacheSize(cacheSize: number): void {\n    this.maxCacheSize = cacheSize;\n  }\n\n  /**\n   * Sets the maximum allowed cache age\n   * @param cacheAge {number} Maximum cache age in milliseconds\n   */\n  setMaximumCacheAge(cacheAge: number): void {\n    this.maxCacheAge = cacheAge;\n  }\n\n  /**\n   * Set the return type of cached images\n   * @param imageReturnType {string} The return type; either 'base64' or 'uri'\n   */\n  setImageReturnType(imageReturnType: 'base64' | 'uri'): void {\n    this.imageReturnType = imageReturnType;\n  }\n\n  /**\n   * Set the default spinnern ame\n   * @param name\n   */\n  setSpinnerName(name: string): void {\n    this.spinnerName = name;\n  }\n\n  /**\n   * Set the default spinner color\n   * @param color\n   */\n  setSpinnerColor(color: string): void {\n    this.spinnerColor = color;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/providers/image-loader-config.ts","import { Injectable } from '@angular/core';\nimport { File, FileEntry, FileError, DirectoryEntry } from '@ionic-native/file';\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';\nimport { ImageLoaderConfig } from \"./image-loader-config\";\nimport { Platform } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/first';\n\ninterface IndexItem {\n  name: string;\n  modificationTime: Date;\n  size: number;\n}\n\ninterface QueueItem {\n  imageUrl: string;\n  resolve: Function;\n  reject: Function;\n}\n\n@Injectable()\nexport class ImageLoader {\n\n  get nativeAvailable(): boolean {\n    return File.installed() && FileTransfer.installed();\n  }\n\n  /**\n   * Indicates if the cache service is ready.\n   * When the cache service isn't ready, images are loaded via browser instead.\n   * @type {boolean}\n   */\n  private isCacheReady: boolean = false;\n\n  /**\n   * Indicates if this service is initialized.\n   * This service is initialized once all the setup is done.\n   * @type {boolean}\n   */\n  private isInit: boolean = false;\n\n  /**\n   * Number of concurrent requests allowed\n   * @type {number}\n   */\n  private concurrency: number = 5;\n\n  /**\n   * Queue items\n   * @type {Array}\n   */\n  private queue: QueueItem[] = [];\n\n  private transferInstances: FileTransferObject[] = [];\n\n  private processing: number = 0;\n\n  private cacheIndex: IndexItem[] = [];\n\n  private currentCacheSize: number = 0;\n\n  private indexed: boolean = false;\n\n  private get shouldIndex(): boolean {\n    return (this.config.maxCacheAge > -1) || (this.config.maxCacheSize > -1);\n  }\n\n  private get isWKWebView(): boolean {\n    return this.platform.is('ios') && (<any>window).webkit;\n  }\n\n  private get isIonicWKWebView(): boolean {\n    return this.isWKWebView && location.host === 'localhost:8080';\n  }\n\n  constructor(\n    private config: ImageLoaderConfig,\n    private file: File,\n    private fileTransfer: FileTransfer,\n    private platform: Platform\n  ) {\n    platform.ready().then(() => {\n      if (!platform.is('cordova')) {\n        // we are running on a browser, or using livereload\n        // plugin will not function in this case\n        this.isInit = true;\n        this.throwWarning('You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.');\n      } else {\n        Observable.fromEvent(document, 'deviceready').first().subscribe(res => {\n          if (this.nativeAvailable) {\n            this.initCache();\n          } else {\n            // we are running on a browser, or using livereload\n            // plugin will not function in this case\n            this.isInit = true;\n            this.throwWarning('You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.');\n          }\n        })\n      }\n    });\n  }\n\n  /**\n   * Preload an image\n   * @param imageUrl {string} Image URL\n   * @returns {Promise<string>} returns a promise that resolves with the cached image URL\n   */\n  preload(imageUrl: string): Promise<string> {\n    return this.getImagePath(imageUrl);\n  }\n\n  /**\n   * Clears the cache\n   */\n  clearCache(): void {\n\n    if (!this.platform.is('cordova')) return;\n\n    const clear = () => {\n\n      if (!this.isInit) {\n        // do not run this method until our service is initialized\n        setTimeout(clear.bind(this), 500);\n        return;\n      }\n\n      // pause any operations\n      this.isInit = false;\n\n      this.file.removeRecursively(this.file.cacheDirectory, this.config.cacheDirectoryName)\n        .then(() => {\n          if (this.isWKWebView && !this.isIonicWKWebView) {\n\n            // also clear the temp files\n            this.file.removeRecursively(this.file.tempDirectory, this.config.cacheDirectoryName)\n              .catch((error) => {\n                // Noop catch. Removing the tempDirectory might fail,\n                // as it is not persistent.\n              })\n              .then(() => {\n                this.initCache(true);\n              });\n\n          } else {\n\n            this.initCache(true);\n\n          }\n        })\n        .catch(this.throwError.bind(this));\n\n    };\n\n    clear();\n\n  }\n\n  /**\n   * Gets the filesystem path of an image.\n   * This will return the remote path if anything goes wrong or if the cache service isn't ready yet.\n   * @param imageUrl {string} The remote URL of the image\n   * @returns {Promise<string>} Returns a promise that will always resolve with an image URL\n   */\n  getImagePath(imageUrl: string): Promise<string> {\n\n    if (typeof imageUrl !== 'string' || imageUrl.length <= 0) {\n      return Promise.reject('The image url provided was empty or invalid.');\n    }\n\n    return new Promise<string>((resolve, reject) => {\n\n      const getImage = () => {\n        this.getCachedImagePath(imageUrl)\n          .then(resolve)\n          .catch(() => {\n            // image doesn't exist in cache, lets fetch it and save it\n            this.addItemToQueue(imageUrl, resolve, reject);\n          });\n\n      };\n\n      const check = () => {\n        if (this.isInit) {\n          if (this.isCacheReady) {\n            getImage();\n          } else {\n            this.throwWarning('The cache system is not running. Images will be loaded by your browser instead.');\n            resolve(imageUrl);\n          }\n        } else {\n          setTimeout(() => check(), 250);\n        }\n      };\n\n      check();\n\n    });\n\n  }\n\n  /**\n   * Add an item to the queue\n   * @param imageUrl\n   * @param resolve\n   * @param reject\n   */\n  private addItemToQueue(imageUrl: string, resolve, reject): void {\n\n    this.queue.push({\n      imageUrl,\n      resolve,\n      reject\n    });\n\n    this.processQueue();\n\n  }\n\n  /**\n   * Check if we can process more items in the queue\n   * @returns {boolean}\n   */\n  private get canProcess(): boolean {\n    return (\n      this.queue.length > 0\n      && this.processing < this.concurrency\n    );\n  }\n\n  /**\n   * Processes one item from the queue\n   */\n  private processQueue() {\n\n    // make sure we can process items first\n    if (!this.canProcess) return;\n\n    // increase the processing number\n    this.processing++;\n\n    // take the first item from queue\n    const currentItem: QueueItem = this.queue.splice(0, 1)[0];\n    \n    // create FileTransferObject instance if needed\n    // we would only reach here if current jobs < concurrency limit\n    // so, there's no need to check anything other than the length of\n    // the FileTransferObject instances we have in memory\n    if (this.transferInstances.length === 0) {\n      this.transferInstances.push(this.fileTransfer.create());\n    }\n\n    const transfer: FileTransferObject = this.transferInstances.splice(0, 1)[0];\n\n    // process more items concurrently if we can\n    if (this.canProcess) this.processQueue();\n\n    // function to call when done processing this item\n    // this will reduce the processing number\n    // then will execute this function again to process any remaining items\n    const done = () => {\n      this.processing--;\n      this.transferInstances.push(transfer);\n      this.processQueue();\n    };\n\n    const localPath = this.file.cacheDirectory + this.config.cacheDirectoryName + '/' + this.createFileName(currentItem.imageUrl);\n\n    transfer.download(currentItem.imageUrl, localPath)\n      .then((file: FileEntry) => {\n        if (this.shouldIndex) {\n          this.addFileToIndex(file).then(this.maintainCacheSize.bind(this));\n        }\n        return this.getCachedImagePath(currentItem.imageUrl);\n      })\n      .then((localUrl) => {\n        currentItem.resolve(localUrl);\n        done();\n      })\n      .catch((e) => {\n        currentItem.reject();\n        this.throwError(e);\n        done();\n      });\n\n  }\n\n  /**\n   * Initialize the cache service\n   * @param replace {boolean} Whether to replace the cache directory if it already exists\n   */\n  private initCache(replace?: boolean): void {\n\n    this.concurrency = this.config.concurrency;\n\n    // create cache directories if they do not exist\n    this.createCacheDirectory(replace)\n      .catch(e => {\n        this.throwError(e);\n        this.isInit = true;\n      })\n      .then(() => this.indexCache())\n      .then(() => {\n        this.isCacheReady = true;\n        this.isInit = true;\n      });\n\n  }\n\n  /**\n   * Adds a file to index.\n   * Also deletes any files if they are older than the set maximum cache age.\n   * @param file {FileEntry} File to index\n   * @returns {Promise<any>}\n   */\n  private addFileToIndex(file: FileEntry): Promise<any> {\n    return new Promise<any>((resolve, reject) => file.getMetadata(resolve, reject))\n      .then(metadata => {\n\n        if (\n          this.config.maxCacheAge > -1\n          && (Date.now() - metadata.modificationTime.getTime()) > this.config.maxCacheAge\n        ) {\n          // file age exceeds maximum cache age\n          return this.removeFile(file.name);\n        } else {\n\n          // file age doesn't exceed maximum cache age, or maximum cache age isn't set\n          this.currentCacheSize += metadata.size;\n\n          // add item to index\n          this.cacheIndex.push({\n            name: file.name,\n            modificationTime: metadata.modificationTime,\n            size: metadata.size\n          });\n\n          return Promise.resolve();\n\n        }\n\n      });\n  }\n\n  /**\n   * Indexes the cache if necessary\n   * @returns {any}\n   */\n  private indexCache(): Promise<void> {\n\n    // only index if needed, to save resources\n    if (!this.shouldIndex) return Promise.resolve();\n\n    this.cacheIndex = [];\n\n    return this.file.listDir(this.file.cacheDirectory, this.config.cacheDirectoryName)\n      .then(files => Promise.all(files.map(this.addFileToIndex.bind(this))))\n      .then(() => {\n        this.cacheIndex = _.sortBy(this.cacheIndex, 'modificationTime');\n        this.indexed = true;\n        return Promise.resolve();\n      })\n      .catch(e => {\n        this.throwError(e);\n        return Promise.resolve();\n      });\n  }\n\n  /**\n   * This method runs every time a new file is added.\n   * It checks the cache size and ensures that it doesn't exceed the maximum cache size set in the config.\n   * If the limit is reached, it will delete old images to create free space.\n   */\n  private maintainCacheSize(): void {\n\n    if (this.config.maxCacheSize > -1 && this.indexed) {\n\n      const maintain = () => {\n        if (this.currentCacheSize > this.config.maxCacheSize) {\n\n          // called when item is done processing\n          const next: Function = () => {\n            this.currentCacheSize -= file.size;\n            maintain();\n          };\n\n          // grab the first item in index since it's the oldest one\n          const file: IndexItem = this.cacheIndex.splice(0, 1)[0];\n\n          if (typeof file == 'undefined') return maintain();\n\n          // delete the file then process next file if necessary\n          this.removeFile(file.name)\n            .then(() => next())\n            .catch(() => next()); // ignore errors, nothing we can do about it\n        }\n      };\n\n      maintain();\n\n    }\n\n  }\n\n  /**\n   * Remove a file\n   * @param file {string} The name of the file to remove\n   */\n  private removeFile(file: string): Promise<any> {\n    return this.file\n      .removeFile(this.file.cacheDirectory + this.config.cacheDirectoryName, file)\n      .then(() => {\n        if (this.isWKWebView && !this.isIonicWKWebView) {\n          return this.file\n            .removeFile(this.file.tempDirectory + this.config.cacheDirectoryName, file)\n            .catch(() => {\n              // Noop catch. Removing the files from tempDirectory might fail, as it is not persistent.\n            });\n        }\n      });\n  }\n\n  /**\n   * Get the local path of a previously cached image if exists\n   * @param url {string} The remote URL of the image\n   * @returns {Promise<string>} Returns a promise that resolves with the local path if exists, or rejects if doesn't exist\n   */\n  private getCachedImagePath(url: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n\n      // make sure cache is ready\n      if (!this.isCacheReady) {\n        return reject();\n      }\n\n      // get file name\n      const fileName = this.createFileName(url);\n\n      // get full path\n      const dirPath = this.file.cacheDirectory + this.config.cacheDirectoryName,\n        tempDirPath = this.file.tempDirectory + this.config.cacheDirectoryName;\n\n      // check if exists\n      this.file.resolveLocalFilesystemUrl(dirPath + '/' + fileName)\n        .then((fileEntry: FileEntry) => {\n          // file exists in cache\n\n          if (this.config.imageReturnType === 'base64') {\n\n            // read the file as data url and return the base64 string.\n            // should always be successful as the existence of the file\n            // is alreay ensured\n            this.file\n              .readAsDataURL(dirPath, fileName)\n              .then((base64: string) => {\n                base64 = base64.replace('data:null', 'data:*/*');\n                resolve(base64);\n              })\n              .catch(reject);\n\n          } else if (this.config.imageReturnType === 'uri') {\n\n            // now check if iOS device & using WKWebView Engine.\n            // in this case only the tempDirectory is accessible,\n            // therefore the file needs to be copied into that directory first!\n            if (this.isIonicWKWebView) {\n\n              // Ionic WKWebView can access all files, but we just need to replace file:/// with http://localhost:8080/\n              resolve(fileEntry.nativeURL.replace('file:///', 'http://localhost:8080/'));\n\n            } else if (this.isWKWebView) {\n\n              // check if file already exists in temp directory\n              this.file.resolveLocalFilesystemUrl(tempDirPath + '/' + fileName)\n                .then((tempFileEntry: FileEntry) => {\n                  // file exists in temp directory\n                  // return native path\n                  resolve(tempFileEntry.nativeURL);\n                })\n                .catch(() => {\n                  // file does not yet exist in the temp directory.\n                  // copy it!\n                  this.file.copyFile(dirPath, fileName, tempDirPath, fileName)\n                    .then((tempFileEntry: FileEntry) => {\n                      // now the file exists in the temp directory\n                      // return native path\n                      resolve(tempFileEntry.nativeURL);\n                    })\n                    .catch(reject);\n                });\n\n            } else {\n\n              // return native path\n              resolve(fileEntry.nativeURL);\n\n            }\n\n          }\n        })\n        .catch(reject); // file doesn't exist\n\n    });\n  }\n\n  /**\n   * Throws a console error if debug mode is enabled\n   * @param args {any[]} Error message\n   */\n  private throwError(...args: any[]): void {\n    if (this.config.debugMode) {\n      args.unshift('ImageLoader Error: ');\n      console.error.apply(console, args);\n    }\n  }\n\n  /**\n   * Throws a console warning if debug mode is enabled\n   * @param args {any[]} Error message\n   */\n  private throwWarning(...args: any[]): void {\n    if (this.config.debugMode) {\n      args.unshift('ImageLoader Warning: ');\n      console.warn.apply(console, args);\n    }\n  }\n\n  /**\n   * Check if the cache directory exists\n   * @param directory {string} The directory to check. Either this.file.tempDirectory or this.file.cacheDirectory\n   * @returns {Promise<boolean|FileError>} Returns a promise that resolves if exists, and rejects if it doesn't\n   */\n  private cacheDirectoryExists(directory: string): Promise<boolean> {\n    return this.file.checkDir(directory, this.config.cacheDirectoryName);\n  }\n\n  /**\n   * Create the cache directories\n   * @param replace {boolean} override directory if exists\n   * @returns {Promise<DirectoryEntry|FileError>} Returns a promise that resolves if the directories were created, and rejects on error\n   */\n  private createCacheDirectory(replace: boolean = false): Promise<any> {\n    let cacheDirectoryPromise: Promise<any>,\n      tempDirectoryPromise: Promise<any>;\n\n\n    if (replace) {\n      // create or replace the cache directory\n      cacheDirectoryPromise = this.file.createDir(this.file.cacheDirectory, this.config.cacheDirectoryName, replace);\n    } else {\n      // check if the cache directory exists.\n      // if it does not exist create it!\n      cacheDirectoryPromise = this.cacheDirectoryExists(this.file.cacheDirectory)\n        .catch(() => this.file.createDir(this.file.cacheDirectory, this.config.cacheDirectoryName, false));\n    }\n\n    if (this.isWKWebView && !this.isIonicWKWebView) {\n      if (replace) {\n        // create or replace the temp directory\n        tempDirectoryPromise = this.file.createDir(this.file.tempDirectory, this.config.cacheDirectoryName, replace);\n      } else {\n        // check if the temp directory exists.\n        // if it does not exist create it!\n        tempDirectoryPromise = this.cacheDirectoryExists(this.file.tempDirectory)\n          .catch(() => this.file.createDir(this.file.tempDirectory, this.config.cacheDirectoryName, false));\n      }\n    } else {\n      tempDirectoryPromise = Promise.resolve();\n    }\n\n    return Promise.all([cacheDirectoryPromise, tempDirectoryPromise]);\n  }\n\n  /**\n   * Creates a unique file name out of the URL\n   * @param url {string} URL of the file\n   * @returns {string} Unique file name\n   */\n  private createFileName(url: string): string {\n    // hash the url to get a unique file name\n    return this.hashString(url).toString();\n  }\n\n  /**\n   * Converts a string to a unique 32-bit int\n   * @param string {string} string to hash\n   * @returns {number} 32-bit int\n   */\n  private hashString(string: string): number {\n    let hash = 0, char;\n    if (string.length === 0) return hash;\n    for (let i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return hash;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-image-loader/src/providers/image-loader.ts"],"sourceRoot":""}